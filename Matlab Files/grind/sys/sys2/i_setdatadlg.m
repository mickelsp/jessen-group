function [data,cols] = i_setdatadlg(flag,par1, par2)
if nargin == 0
   flag = 'init';
end;
switch flag
 case 'init'
   if nargin == 3
      data1 = i_checkstr(par1);
      columns = i_checkstr(par2);
      if isempty(data1) && ~isempty(columns)
          data1=zeros(1,length(columns))+NaN;
      end;
      if size(data1,2)<length(columns)
          data1=[data1, nan(size(data1,1),length(columns)-size(data1,2))];
      end;             
   else
      data1 = rand(10, 3);
      columns={'t','X1','X2'};
   end;
   data1(end+1:end + 100, :) = NaN;
   h1 = figure( ...
      'Units','characters',...
      'PaperUnits',get(0,'defaultfigurePaperUnits'),...
      'Color', [0.941176470588235 0.941176470588235 0.941176470588235], ...
      'IntegerHandle','off',...
      'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
      'MenuBar','none',...
      'Name','setdata - edit data of external and state variables',...
      'NumberTitle','off',...
      'PaperPosition',get(0,'defaultfigurePaperPosition'),...
      'PaperSize',get(0,'defaultfigurePaperSize'),...
      'PaperType',get(0,'defaultfigurePaperType'),...
      'Position', [103 20 112 32], ...
      'Resize','off',...
      'HandleVisibility','callback',...
      'UserData', [], ...
      'CreateFcn', 'movegui(gcbf,''center'')',...
      'Tag','figure1',...
      'Visible','on' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'Callback','i_setdatadlg(''load'')',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'Position', [3.4 2.15 18.2 1.84615384615385], ...
      'String','Load',...
      'Tag','loadbutton' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'Callback','i_setdatadlg(''columns'')',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'Position', [23.8 2.15 18.2 1.84615384615385], ...
      'String','Variables',...
      'Tag','ColumnsButton' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'Callback','i_setdatadlg(''cancel'')',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'Position', [65 2.15 18.2 1.84615384615385], ...
      'String','Cancel',...
      'Tag','pushbutton3' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'Callback','i_setdatadlg(''OK'')',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'Position', [85.2 2.15 18.2 1.84615384615385], ...
      'String','OK',...
      'Tag','pushbutton4' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'Callback','i_setdatadlg(''help'')',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'Position', [44.4 2.15 18.2 1.84615384615385], ...
      'String','Help',...
      'Tag','pushbutton5' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'HorizontalAlignment','left',...
      'Position', [59.8 27.3076923076923 20.2 1.07692307692308], ...
      'String','Number of rows',...
      'Style','text',...
      'Tag','text2' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'HorizontalAlignment','left',...
      'Position', [59.8 22.3846153846154 19.4 1.07692307692308], ...
      'String','Number of columns',...
      'Style','text',...
      'Tag','text3' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'Callback','i_setdatadlg(''setrows'')',...
      'FontUnits','pixels',...
      'BackgroundColor', [1 1 1], ...
      'FontSize', 10.6666666666667, ...
      'HorizontalAlignment','left',...
      'Position', [59.8 25.6923076923077 20.2 1.69230769230769], ...
      'String',{   sprintf('%d',size(data1,1)) },...
      'Style','edit',...
      'Tag','RowEdit');
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'Callback','i_setdatadlg(''setcols'')',...
      'BackgroundColor', [1 1 1], ...
      'FontSize', 10.6666666666667, ...
      'HorizontalAlignment','left',...
      'Position', [59.8 20.6923076923077 20.2 1.69230769230769], ...
      'String',{  sprintf('%d',size(data1,2)) },...
      'Style','edit',...
      'Tag','ColEdit');
  hcmenu = uicontextmenu('Parent',h1);
  uimenu(hcmenu, 'Label', 'Copy', 'Callback', 'i_setdatadlg(''copy'')',...
      'Accelerator','C');
   uimenu(hcmenu, 'Label', 'Paste', 'Callback','i_setdatadlg(''load'',''Clipboard'')',...
       'Accelerator','V');
    uimenu(hcmenu, 'Label', 'File', 'Callback','i_setdatadlg(''load'',''Text file'')',...
       'Accelerator','L');
  set(h1, 'uicontextmenu',hcmenu);
            
    uitable( ...
      'Parent', h1, ...
      'Units','characters',...
      'ColumnFormat', {  [] }, ...
      'CellEditCallback','i_setdatadlg(''ColNameChanged'')',...
      'ColumnEditable', true, ...
      'ColumnName',{  'Variable' },...
      'ColumnWidth', {  100}, ...
      'Data',columns',...
      'Position', [19.8 9.15384615384616 33.8 18], ...
      'UserData', [], ...
      'Tag','ColumnTable' );
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'FontSize', 10.6666666666667, ...
      'HorizontalAlignment','left',...
      'Position', [19.8 27.3076923076923 33.2 1.07692307692308], ...
      'String','Variable in each column',...
      'Style','text',...
      'Tag','text1' );
   uitable( ...
      'Parent', h1, ...
      'Units','characters',...
      'Columnname', columns, ...
      'ColumnEditable', true(1, size(data1,2)), ...
      'Data', data1, ...
      'Position', [0 6 112 27], ...
      'uicontextmenu',hcmenu,...
      'UserData', [], ...
      'Tag','DataTable' );
   ud=[];
   uiwait(h1);
   if ishandle(h1)
      ud = get(h1, 'userdata');
   end;
   if strcmp(ud, 'ok')
      h2 = findobj(h1,'tag','DataTable');
      h3 = findobj(h1,'tag','ColumnTable');
      data = get(h2, 'data');
      cols = get(h3, 'data');
      kk = ~all(isnan(data), 2);
      data = data(kk, :);
      kk = ~all(isnan(data), 1);
      data = data(:, kk);
      cols = cols(kk, :)';
   else
      data = [];
      cols = {};
   end;
   if ishandle(h1)
      close(h1);
   end;
 case 'help'
   commands('setdata')
 case 'copy'
    h2 = findobj(gcbf,'tag','DataTable');
    h3 = findobj(gcbf,'tag','ColumnTable');
    data2 = get(h2, 'data');
    cols2 = get(h3, 'data');
    kk = ~all(isnan(data2), 2);
    data2 = data2(kk, :);
    kk = ~all(isnan(data2), 1);
    data2 = num2cell(data2(:, kk));
    cols2 = cols2(kk, :)';
    varcopy([cols2;data2]);
 case 'OK'
   set(gcbf,'userdata','ok');
   uiresume;
 case 'load'
   cols = [];
   data1 = [];
   if nargin<2
   par1=i_4choicesdlg('Load data','Load from what source?',{'Text file',...
      'Variable from workspace','Clipboard','Cancel'});
   end;
   switch par1
    case 'Text file'
      [filename,path]=uigetfile('*.csv;*.dat;*.txt', 'Get data file (delimited or CSV)');
      if filename ~= 0
         filename = [path filename];
         [cols, data1] = i_loaddata(filename);
          data1 = i_checkstr(char(data1));
      end;
    case 'Variable from workspace'     
       answer=inputdlg({'Enter variable or function'},'Load data from workspace',1,{''});
       data1=evalin('base',answer{1});
    case 'Clipboard'
        data1=varpaste('numeric');
        if ~isempty(data1) && all(isnan(data1(1,:)))
           data1=data1(2:end,:);
           cols=varpaste;
           cols=cols(1,:);
        end;
   end;
   if ~isempty(cols)
      TAB = sprintf('\t');
      if ischar(cols)
         l = length(cols) + 1;
         l2 = l - 1;
         while l2 < l
            cols = strrep(cols, [TAB TAB], [TAB '###skip###' TAB]);
            cols = strrep(cols, TAB, ' ');
            cols=strrep(cols,'  ',' ');
            l = l2;
            l2 = length(cols);
         end;
         cols=i_checkstr(['{''' strrep(strtrim(cols),' ',''' ''') '''}']);
         % cols = memo2str(cols, 0);
      end;
   else
      h1 = findobj(gcbf,'tag','ColumnTable');
      if ishandle(h1)
         cols = get(h1, 'data')';
      end;
   end;
   if ~isempty(data1)
      if ischar(data1)
          data1 = i_checkstr(char(data1));
      end;
      data1(end+1:end + 100, :) = NaN;
      h = findobj(gcbf,'tag','ColEdit');
      set(h, 'String',sprintf('%d',size(data1,2)));
      h = findobj(gcbf,'tag','RowEdit');
      set(h, 'String',sprintf('%d',size(data1,1)));
      h = findobj(gcbf,'tag','DataTable');
      h1 = findobj(gcbf,'tag','ColumnTable');
      set(h, 'data',data1);
      set(h1, 'data', cols');
      set(h,'Columnname', cols);
      set(h, 'ColumnEditable', true(size(cols)));
   end;
 case 'cancel'
   set(gcbf,'userdata','cancel');
   uiresume;
 case 'ColNameChanged'
   h = findobj(gcbf,'tag','DataTable');
   h1 = findobj(gcbf,'tag','ColumnTable');
   cols1 = get(h1, 'data');
   set(h,'Columnname', cols1);
 case 'columns'
   h = findobj(gcbf,'tag','DataTable');
   vis = get(h, 'visible');
   if strcmp(vis, 'on')
      set(h,'visible','off');
      h = findobj(gcbf,'tag','ColumnsButton');
      set(h,'String','Data')
   else
      set(h,'visible','on');
      h = findobj(gcbf,'tag','ColumnsButton');
      set(h,'String','Variables')
   end;
 case 'setcols'
   h = findobj(gcbf,'tag','ColEdit');
   ncols = str2double(get(h, 'String'));
   h = findobj(gcbf,'tag','DataTable');
   h1 = findobj(gcbf,'tag','ColumnTable');
   set(gcbf,'ColumnEditable', logical(true,ncols))
   
   

   data1 = get(h, 'data');
   cols1 = get(h1, 'data');
   if size(data1, 2) > ncols
      data1 = data1(:, 1:ncols);
      cols1 = cols1(1:ncols, :);
   elseif size(data1, 2) < ncols
      data1(:, end + 1:ncols) = NaN;
      cols1(end + 1:ncols, :) = {''};
   end;
   set(h, 'data', data1);
   set(h,'Columnname', cols1);
   set(h,'ColumnEditable',true(size(cols1))');
   set(h1, 'data', cols1);
 case 'setrows'
   h = findobj(gcbf,'tag','RowEdit');
   nrows = str2double(get(h, 'String'));
   h = findobj(gcbf,'tag','DataTable');
   data1 = get(h, 'data');
   if size(data1, 1) > nrows
      data1 = data1(1:nrows, :);
   elseif size(data1, 2) < nrows
      data1(end + 1:nrows, :) = NaN;
   end;
   set(h, 'data', data1);
end;


