function i_pardlg
global g_grind;
   defgroup = '-';
   if ~isfield(g_grind, 'pargroups')
      g_grind.pargroups = cell(size(g_grind.pars));
      for i = 1:length(g_grind.pargroups)
         g_grind.pargroups{i} = defgroup;
      end;
   end;
   pardata = cell(length(g_grind.pars), 5);
   for i = 1:length(g_grind.pars)
      pardata{i, 1} = g_grind.pars{i};
      pardata{i, 2} = g_grind.pargroups{i};
      pardata{i, 3} = par('-d', g_grind.pars{i});
      valu = evalin('base', g_grind.pars{i});
      if isnumeric(valu) || islogical(valu)
         if numel(valu)>1000
             pardata{i,4} = sprintf('[%dx%d %s]',size(valu),class(valu));
         else
             pardata{i, 4}= mat2str(valu); 
         end
      end;
      pardata{i, 5} = par('-u', g_grind.pars{i});
      pardata{i, 6} = valu;
      if numel(valu)==1
          pardata{i, 7}=sprintf('%s = %g;',g_grind.pars{i},valu);
      else
          if max(max(valu))-min(min(valu))<eps
          pardata{i, 7}=sprintf('%s = zeros(%d,%d)+%g;',g_grind.pars{i},size(valu),mean(mean(valu)));
          else
          pardata{i, 7}=sprintf('%s = %s;',g_grind.pars{i},pardata{i,4});
          end;
      end;
   end;
   parfilter={'all','all','all','','all'};
  ud.Indices=[1,1];
   h1 = figure( ...
      'Units','characters',...
      'PaperUnits',get(0,'defaultfigurePaperUnits'),...
      'Color', [0.94 0.94 0.94], ...
      'IntegerHandle','off',...
      'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
      'MenuBar','none',...
      'Name','Par. Edit',...
      'NumberTitle','off',...
      'PaperPosition',get(0,'defaultfigurePaperPosition'),...
      'PaperSize',get(0,'defaultfigurePaperSize'),...
      'PaperType',get(0,'defaultfigurePaperType'),...
      'Position', [103.8 29 121.4 32.4615384615385], ...
      'Resize','off',...
      'HandleVisibility','callback',...
      'UserData', ud, ...
      'Tag','figure1',...
      'Visible','on' ,...
       'CreateFcn',@(h,evnt)movegui(gcbf, 'center'));
   
   uitable( ...
      'Parent', h1, ...
      'Units','characters',...
      'BackgroundColor', [0.96 0.96 0.96], ...
      'ColumnFormat', [{getparfilter(pardata(:, 1))}, {getparfilter(pardata(:, 2))}, ...
      {getparfilter(pardata(:, 3))}, 'char', {getparfilter(pardata(:, 5))}], ...
      'ColumnEditable', true(1, 5), ...
      'ColumnName',{  'Parameter'; 'Group'; 'Description'; 'Value'; 'Unit' },...
      'ColumnWidth', {  60 80 300 80 60 }, ...
      'CellEditCallback', @filtertableedit, ...
      'TooltipString','Select a filter here',...
      'Data', parfilter, ...
      'Position', [0 29.4615384615385 120.2 3.23076923076923], ...
      'RowName', [], ...
      'FontWeight','light',...
      'UserData', [], ...
      'Tag','FilterTable' );

  htable= uitable('Parent', h1, ...
      'Units','characters',...
      'BackgroundColor', [1 1 1; 0.96 0.96 0.96], ...
      'ColumnFormat', {  [] [] [] [] [] }, ...
      'ColumnEditable', [false true true true true], ...
      'KeyPressFcn',@onKeyPressData,...
      'CellSelectionCallback', @ParTableCellSelection, ...
      'CellEditCallback', @partableedit, ...
      'ColumnName', [], ...
      'TooltipString','Press Alt-Enter to change parameter',...
      'ColumnWidth', {  60 80 300 80 60 }, ...
      'Data', pardata(:,1:5), ...
      'Position', [0 3 120.2 26.5384615384615], ...
      'RowName', [], ...
      'UserData', pardata, ...
      'Tag','ParTable' );
   
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'Callback', @editparbuttonclick, ...
      'FontSize', 10.6666666666667, ...
      'Position', [39.8 0.846 13.8 1.69230769230769], ...
      'String','Edit par',...
      'TooltipString','Edit each parameter separately',...
      'Tag','EditparBtn' );

    uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'Callback', @okbuttonclick, ...
      'FontSize', 10.6666666666667, ...
      'Position', [58.4 0.846153846153846 13.8 1.69230769230769], ...
      'String','OK',...
      'TooltipString','OK',...
      'Tag','OKBtn' );

   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'Callback',@cancelbuttonclick,...
      'FontSize', 10.6666666666667, ...
      'Position', [77 0.846153846153846 13.8 1.69230769230769], ...
      'String',' Cancel',...
      'TooltipString','Cancel',...
      'Tag','CancelBtn' );
   
   uicontrol( ...
      'Parent', h1, ...
      'Units','characters',...
      'FontUnits','pixels',...
      'Callback',@helpbuttonclick,...
      'FontSize', 10.6666666666667, ...
      'Position', [96 0.846153846153846 13.8 1.69230769230769], ...
      'String','Help',...
      'TooltipString','Help',...
       'Tag','HelpBtn' );
    
%    uicontrol( ...
%       'Parent', h1, ...
%       'Units','characters',...
%       'FontUnits','pixels',...
%       'Callback',@copybuttonclick,...
%       'FontSize', 10.6666666666667, ...
%       'Position', [39.8 0.846 13.8 1.69230769230769], ...
%       'String','Clipboard',...
%       'Tag','CopyBtn' );
  hcmenu = uicontextmenu('Parent',h1);
% Define the context menu items and install their callbacks
uimenu(hcmenu, 'Label', 'Copy Table', 'Callback',@copybuttonclick);
%uimenu(hcmenu, 'Label', 'Paste', 'Callback',@copybuttonclick);
set(htable,'uicontextmenu',hcmenu);
%  guide(h1);
   uiwait(h1);
   if ishandle(h1)
      htab=findobj(h1,'Tag','ParTable');
      allpardata = get(htab, 'userdata');
      for i=1:size(allpardata,1)
          apar=allpardata{i,1};
          assignin('base',apar,allpardata{i, 6});
          par('-set',apar, sprintf('%s,%s',allpardata{i, 3},allpardata{i, 5}));
          g_grind.pargroups{i}=allpardata{i,2};
      end;
      close(h1);
   end;
function editparbuttonclick(src, evnt)
  htab=findobj(gcbf,'Tag','ParTable');
  pardata = get(htab, 'data');
  allpardata = get(htab, 'userdata');
  ud = get(gcbf, 'userdata');
  if isstruct(ud) && isfield(ud,'Indices') && ~isempty(ud.Indices)
      i=ud.Indices(1);
  else
      i=1;
  end;
  j=strcmp(allpardata(:,1), pardata{i,1});
  res=i_editpardlg(allpardata,find(j));
  if ~isempty(res)
     allpardata=res;
  end;
  set(htab,'data',allpardata(:,1:5));
  set(htab,'userdata',allpardata);
  UpdateParfilter(gcbf,allpardata)

function onKeyPressData(src, evnt)
if any(strcmp(evnt.Key,'return')) && any(strcmp('alt',evnt.Modifier))
     editparbuttonclick(src, evnt)
end;

function okbuttonclick(src, evnt)
uiresume(gcbf);

function cancelbuttonclick(src, evnt)
uiresume(gcbf);

function helpbuttonclick(src, evnt)
commands('par');

function copybuttonclick(src, evnt)
htab=findobj(gcbf,'Tag','ParTable');
pardata = get(htab, 'data');
hfilt=findobj(gcbf,'Tag','FilterTable');
colnames = get(hfilt, 'ColumnName');
varcopy([colnames';pardata]);

function ParTableCellSelection(src, evnt)
 set(gcbf,'Userdata',evnt);

function partableedit(src, evnt)
pardata = get(src, 'data');
par=pardata{evnt.Indices(1),1};
allpardata = get(src, 'userdata');
i=strcmp(allpardata(:,1),par);
allpardata{i,evnt.Indices(2)}=evnt.NewData;
if evnt.Indices(2)==4
   allpardata{i,6}=str2num(evnt.NewData); %#ok
end;
set(src, 'userdata',allpardata);
UpdateParfilter(gcbf,allpardata,evnt.Indices(2))

function filtertableedit(src, evnt)
if any([1 2 3 5] == evnt.Indices(2))
   htab=findobj(gcbf,'Tag','ParTable');
   allpardata = get(htab, 'userdata');
   currfilter = evnt.NewData;
   if strcmp(currfilter, 'all')
      set(htab, 'data', allpardata(:,1:5))
   else
      ndx = strcmp(currfilter, allpardata(:, evnt.Indices(2)));
      set(htab, 'data', allpardata(logical(ndx), 1:5))
   end;
   filter = {'all'};
   filter = filter(ones(1, 5));
   filter{evnt.Indices(2)} = currfilter;
   set(src, 'data', filter);
end;

function UpdateParfilter(h,allpardata,ipar)
hfilt=findobj(h,'Tag','FilterTable');
if nargin>2
    if any(ipar==[1 2 3 5])
        filt=get(hfilt, 'ColumnFormat');
        filt{ipar} =getparfilter(allpardata(:, ipar));
        set(hfilt, 'ColumnFormat', filt);
    end;
else
   set(hfilt, 'ColumnFormat', [{getparfilter(allpardata(:, 1))}, {getparfilter(allpardata(:, 2))}, ...
      {getparfilter(allpardata(:, 3))}, 'char', {getparfilter(allpardata(:, 5))}]);
end;

function f = getparfilter(pardata)
f=[{'all'},sort(unique(pardata'))];
ndx = false(size(f));
for i = 1:length(f);
   ndx(i) = ~isempty(f{i});
end;
f = f(logical(ndx));

 