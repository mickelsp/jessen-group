 function fig = i_paranaloutdlg(flag)
global g_grind;
if nargin == 0
   flag = 'init';
end;
switch flag
case 'init'
   if ~isempty(g_grind)&&~isfield(g_grind,'paranal')
      paranal('-defaults');
   end;      
   if ~isempty(g_grind)
      N=length(g_grind.paranal.plots);
   else
      N=1;
    end;
    plotlst=cell(1,N);
    for i = 1:N
      plotlst{i} = sprintf('Plot No. %d', i);
   end;
 h0 = figure('Units','points', ...
	'Color',[0.914 0.914 0.914], ...
	'MenuBar','none', ...
	'Name','Edit Plots for Paranal', ...
	'NumberTitle','off', ...
	'PaperPosition',[18 180 576 432], ...
	'PaperType','A4', ...
   'PaperUnits','points', ...
   'Position',[198  214  366 244.5], ...
	'Tag','vectplotdlg', ...
   'ToolBar','none',...
    'CreateFcn',@(h,evnt)movegui(gcbf, 'center'));
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[17 130 163.5 18], ...
	'String','Y-axis: state variable or function (or list)', ...
	'Style','text', ...
	'Tag','StaticText2');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Max',30, ...
	'Position',[17 117 190 18], ...
	'Style','edit', ...
	'Tag','EditY', ...
	'TooltipString','Enter here a list of variables or functions for the Y-axis');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[17 206 72.75 18], ...
	'String','Plot No.', ...
	'Style','text', ...
	'Tag','StaticText1');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Callback','i_paranaloutdlg(''changeplot'')', ...
	'ListboxTop',0, ...
	'Position',[105 205.5 113.25 22.5], ...
	'String',plotlst, ...
	'Style','popupmenu', ...
	'Tag','PlotNo', ...
	'TooltipString','Select Plot number here', ...
	'Value',1);
uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','i_paranaloutdlg(''newplot'')', ...
	'ListboxTop',0, ...
	'Position',[243 205.5 93.75 22.5], ...
	'String','Add Paranal Plot', ...
	'Tag','AddBtn', ...
	'TooltipString','Add new plot to the list of plots');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','i_paranaloutdlg(''ok'')', ...
	'ListboxTop',0, ...
	'Position',[31.5 8.25 93.75 22.5], ...
	'String','OK', ...
	'Tag','OKBtn', ...
	'TooltipString','Close and save');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','i_paranaloutdlg(''cancel'')', ...
	'ListboxTop',0, ...
	'Position',[141 8.25 93.75 22.5], ...
	'String','Cancel', ...
	'Tag','CancelBtn', ...
	'TooltipString','Close and undo changes');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'Callback','commands paranal', ...
	'ListboxTop',0, ...
	'Position',[250.5 8.25 93.75 22.5], ...
	'String','Help', ...
	'Tag','HelpBtn', ...
	'TooltipString','Open help window');

uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[17 175 190 18], ...
	'String','X-axis: function or <param1> for control parameter', ...
	'Style','text', ...
   'Tag','StaticText2');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[17 161 190 18], ...
	'Style','edit', ...
	'Tag','EditX', ...
	'TooltipString','Edit the variable for the X axis here');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[17 76 174 18], ...
	'String','Z-axis, state variable or function (or list)', ...
	'Style','text', ...
	'Tag','StaticText2');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Max',30, ...
	'Position',[17 63 190 18], ...
	'Style','edit', ...
	'Tag','EditZ', ...
	'TooltipString','Enter here a variable or function for the Z-axis');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[245 175 69 18], ...
	'String','Range X axis', ...
	'Style','text', ...
	'Tag','StaticText2');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[245 161 100 18], ...
	'Style','edit', ...
	'Tag','EditXlim', ...
   'TooltipString','Edit the limits for the X axis here');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[245 130 69 18], ...
	'String','Range Y axis', ...
	'Style','text', ...
   'Tag','StaticText2');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[245 117 100 18], ...
	'Style','edit', ...
	'Tag','EditYlim', ...
	'TooltipString','Edit the limits for the Y axis here');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.914 0.914 0.914], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[245 76 69 18], ...
	'String','Range Z axis', ...
	'Style','text', ...
   'Tag','StaticText2');
uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[245 63 100 18], ...
	'Style','edit', ...
	'Tag','EditZlim', ...
	'TooltipString','Edit the limits for the Z axis here');

   %if N==1
  %   set(hplotno,'Enable','off');
  % end;
%    global g_grind; 
    if ~isempty(g_grind)
       ud.oudlist=g_grind.paranal.plots;
    else
       ud.oudlist={};
    end;
    ud.curr=g_grind.paranal.currno;
    set(h0,'userdata',ud);
   setplot(ud.curr,h0);
   if nargout > 0, fig = h0; end
 case 'ok'
%    global g_grind;
    ud=get(gcbf,'userdata');
    savecurrent(ud.curr);
    delete(gcbf);
    disp(' ');
    paranal('-list');
    paranal;
 case 'cancel'
    ud=get(gcbf,'userdata');
%    global g_grind;
    g_grind.paranal.plots=ud.oudlist;
    delete(gcbf);
    disp(' ');
    paranal('-list');
 case 'newplot'
   h=findobj(gcbf,'Tag','PlotNo');
   plotlst = get(h,'string');
   No=length(plotlst)+1;
   plotlst{No} = sprintf('Plot No. %d', No);
   if No>1
     set(h,'Enable','on');
   end;
   set(h,'string',plotlst);
   set(h,'value',No);
   i_paranaloutdlg('changeplot');
case 'changeplot'
    ud=get(gcbf,'userdata');
    savecurrent(ud.curr);
    h=findobj(gcbf,'tag','PlotNo');
  v=get(h,'Value');
  setplot(v,gcbf);
  ud.curr=v;
  set(gcbf,'userdata',ud);
end;

function savecurrent(No)
global g_grind;
f=gcbf;
h=findobj(f,'tag','EditX');
g_grind.paranal.plots{No}.xaxis=mystr2cell(get(h,'string'));
h=findobj(f,'tag','EditY');
g_grind.paranal.plots{No}.yaxis=mystr2cell(get(h,'string'));
h=findobj(f,'tag','EditZ');
g_grind.paranal.plots{No}.zaxis=mystr2cell(get(h,'string'));
h=findobj(f,'tag','EditXlim');
g_grind.paranal.plots{No}.xlim=i_checkstr(get(h,'string'));
h=findobj(f,'tag','EditYlim');
g_grind.paranal.plots{No}.ylim=i_checkstr(get(h,'string'));
h=findobj(f,'tag','EditZlim');
g_grind.paranal.plots{No}.zlim=i_checkstr(get(h,'string'));
g_grind.paranal.currno=No;
g_grind.paranal.defaultplots=0;

function setplot(No,f)
global g_grind;
if isempty(g_grind)||(No>length(g_grind.paranal.plots))
   x='<param1>';
   y='';
   z='';
   xlim='[0 10]';
   ylim=xlim;
   zlim=xlim;
else
   x = mycell2str(g_grind.paranal.plots{No}.xaxis);
   y = mycell2str(g_grind.paranal.plots{No}.yaxis);
   z = mycell2str(g_grind.paranal.plots{No}.zaxis);
   xlim = sprintf('[%g %g]',g_grind.paranal.plots{No}.xlim);
   ylim = sprintf('[%g %g]',g_grind.paranal.plots{No}.ylim);
   zlim = sprintf('[%g %g]',g_grind.paranal.plots{No}.zlim);
end;
h=findobj(f,'tag','EditX');
set(h,'string',x);
h=findobj(f,'tag','EditY');
set(h,'string',y);
h=findobj(f,'tag','EditZ');
set(h,'string',z);
h=findobj(f,'tag','EditXlim');
set(h,'string',xlim);
h=findobj(f,'tag','EditYlim');
set(h,'string',ylim);
h=findobj(f,'tag','EditZlim');
set(h,'string',zlim);
h=findobj(f,'tag', 'PlotNo');
set(h,'value',No);

function A=mystr2cell(s)
s=outf('changeshortcut', s);
A=str2cell(strrep(s,' ',sprintf('\n')));


function s=mycell2str(A)
s=strtrim(sprintf('%s ',A{:}));

