function i_senstimeplot(tag, s_matrix, vlabels, plabels, percdummy)
if nargin == 0
   tag = 'init';
end;
switch tag
 case 'init'
   ud.matrix = s_matrix;
   ud.percdummy = percdummy;
   k=1;
   ud.vlabels{k} = vlabels{1,1};
   ud.from(k)=1;
   j=1;
   for i=1:size(vlabels,1)
       tim=str2double(vlabels{i,2});
       if isempty(tim)
           tim=j;
       end;
       if strcmp(vlabels{i,1},ud.vlabels{k})
           ud.times{k}(j)=tim;
           j=j+1;
       else
           j=2;
           ud.to(k)=i-1;
           k=k+1;
           ud.times{k}(1)=tim;
           ud.from(k)=i;
           ud.vlabels{k}=vlabels{i,1};
       end;
   end;
   ud.to(k)=size(vlabels,1);
   if exist('i_figno','file')
      n = i_figno('mcarlo') + 2;
   else
      n = 4;
   end;
   if ishandle(n)
      close(n);
   end;
   h0 = figure(n);
   set(h0,'Color',[0.914 0.914 0.914], ...
      'PaperPosition',[18 180 576 432], ...
      'PaperUnits','points', ...
      'Position',[269 251 560 420], ...
      'ResizeFcn','doresize(gcbf)', ...
      'Tag','Fig448', ...
      'ToolBar','figure', ...
      'DefaultaxesCreateFcn','plotedit(gcbf,''promoteoverlay''); ');
   set(h0, 'userdata', ud);
   uimenu('Parent',h0, ...
      'HandleVisibility','off', ...
      'Tag','ScribeHGBinObject', ...
      'Visible','off');
   uimenu('Parent',h0, ...
      'HandleVisibility','off', ...
      'Tag','ScribeFigObjStorage', ...
      'Visible','off');
   uimenu('Parent',h0, ...
      'HandleVisibility','off', ...
      'Tag','ScribeHGBinObject', ...
      'Visible','off');
   h1 = axes('Parent',h0, ...
      'Box','on', ...
      'CameraUpVector',[0 1 0], ...
      'Color',[1 1 1], ...
      'CreateFcn','', ...
      'Position',[0.14 0.24 0.7732 0.65], ...
      'Tag','Axes1', ...
      'XColor',[0 0 0], ...
      'YColor',[0 0 0], ...
      'ZColor', [0 0 0]);
   line1 = line('Parent',h1, ...
      'Color',[0 0 1], ...
      'LineStyle','-', ...
      'Marker','.', ...
      'Tag','Axes1Line1', ...
      'XData',ud.times{1}, ...
      'YData', []);
   line2 = line('Parent',h1, ...
      'Color',[1 0 0], ...
      'LineStyle','-', ...
      'Marker','.', ...
      'Tag','Axes1Line2', ...
      'XData',ud.times{1}, ...
      'YData', []);
  
   line('Parent',h1, ...
      'Color',[1 1 1], ...
      'LineStyle',':', ...
      'Tag','AxesPerc1', ...
      'XData',ud.times{1}', ...
      'YData', percdummy(2,ud.from(1):ud.to(1)));
  
   line('Parent',h1, ...
      'Color',[1 1 1], ...
      'LineStyle',':', ...
      'Tag','AxesPerc2', ...
      'XData',ud.times{1}', ...
      'YData', percdummy(6,ud.from(1):ud.to(1)));
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'ListboxTop',0, ...
      'Callback','i_senstimeplot(''update'')', ...
      'Position',[101.25 9 99.75 15], ...
      'String',ud.vlabels, ...
      'Style','popupmenu', ...
      'Tag','VarPopup', ...
      'Value', 1);
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'BackgroundColor',[0.914 0.914 0.914], ...
      'ListboxTop',0, ...
      'Callback','i_senstimeplot(''update'')', ...
      'Position',[295.5 4 100.5 15], ...
      'String',plabels, ...
      'Style','popupmenu', ...
      'Tag','ParPopup1', ...
      'Value', 1);
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'BackgroundColor',[0.914 0.914 0.914], ...
      'ListboxTop',0, ...
      'Callback','i_senstimeplot(''update'')', ...
      'Position',[295.5 25 100.5 15], ...
      'String',plabels, ...
      'Style','popupmenu', ...
      'Tag','ParPopup2', ...
      'Value', min(length(plabels),2));
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'BackgroundColor',[0.914 0.914 0.914], ...
      'ListboxTop',0, ...
      'Position',[239.25 20 45 15], ...
      'String','Parameter 1', ...
      'Style','text', ...
      'Tag','StaticText1');
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'BackgroundColor',[0.914 0.914 0.914], ...
      'ListboxTop',0, ...
      'Position',[239.25 2 45 15], ...
      'String','Parameter 2', ...
      'Style','text', ...
      'Tag','StaticText1');
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'BackgroundColor',[0.914 0.914 0.914], ...
      'ListboxTop',0, ...
      'Position',[47.25 8.25 45 15], ...
      'String','variable', ...
      'Style','text', ...
      'Tag','StaticText1');
%    uicontrol('Parent',h0, ...
%       'Units','points', ...
%       'BackgroundColor',[0.914 0.914 0.914], ...
%       'ListboxTop',0, ...
%       'Position',[100.75 290 200 15], ...
%       'String',' ', ...
%       'Style','text', ...
%       'Tag','TitleText');
   uicontrol('Parent',h0, ...
      'Units','points', ...
      'BackgroundColor',[0.914 0.914 0.914], ...
      'ListboxTop',0, ...
      'Position',[101.25 27.75 86.25 15], ...
      'Callback','i_senstimeplot(''update'')', ...
      'String','Show percentiles', ...
      'Style','checkbox', ...
      'Tag','Checkbox1');
    if ~isempty(ud.matrix)
      set(line1, 'YData', ud.matrix(1,ud.from(1):ud.to(1)));
      set(line2, 'YData', ud.matrix(min(size(ud.matrix,1),2),ud.from(1):ud.to(1)));
    end;
    xlabel('Time(t)');
    ylabel(sprintf('Sensitivity to %s',vlabels{1}))
    legend(plabels{1},plabels{min(length(plabels),2)});
 case 'update'
   ud = get(gcbf, 'userdata');
   h=findobj(gcbf,'Tag','ParPopup1');
   ipar1 = get(h, 'Value');
   h=findobj(gcbf,'Tag','ParPopup2');
   ipar2 = get(h, 'Value');
   pars = get(h, 'String');
   h=findobj(gcbf,'Tag','VarPopup');
   ivar = get(h, 'Value');
   vars = get(h, 'string');
   if (ipar1<length(pars))&&(ipar2<length(pars))
     legend(pars{ipar1},pars{ipar2});
   end;
   ylabel(sprintf('Sensitivity to %s',vars{ivar}))
   h=findobj(gcbf,'Tag','Axes1Line1');
   yy =  ud.matrix(ipar1,ud.from(ivar):ud.to(ivar));
   set(h, 'XData', ud.times{ivar});
   set(h, 'YData', yy);
   h=findobj(gcbf,'Tag','Axes1Line2');
   yy =  ud.matrix(ipar2,ud.from(ivar):ud.to(ivar));
   set(h, 'XData', ud.times{ivar});
   set(h, 'YData', yy);
   h1=findobj(gcbf,'Tag','AxesPerc1');
   yy =  ud.percdummy(2,ud.from(ivar):ud.to(ivar));
   set(h1, 'XData', ud.times{ivar});
   set(h1, 'YData', yy);
   h2=findobj(gcbf,'Tag','AxesPerc2');
   yy =  ud.percdummy(6,ud.from(ivar):ud.to(ivar));
   set(h2, 'XData', ud.times{ivar});
   set(h2, 'YData', yy);
   h=findobj(gcbf,'Tag','Checkbox1');
   if get(h,'Value')
      set([h1;h2],'color',[0 0 0]);
   else
      set([h1;h2],'color',[1 1 1]);
   end;      
   title(sprintf('Abs, sine distance between "%s" for "%s" is %5.4g',strtrim(pars{ipar1}),...
       strtrim(pars{ipar2}),sinedist(ud.matrix(ipar2,:),ud.matrix(ipar1,:))));
end

function [d] = sinedist(u, V)
sumX2=sum_nonan(u.^2,2);
sumY2=sum_nonan(V.^2,2);
sumXY=sum_nonan(V.*repmat(u,size(V,1),1),2);
d = sqrt(1 - (sumXY ./ sqrt(sumX2 .* sumY2)).^2);

function res=sum_nonan(A,dim)
if nargin==1
    dim=1;
end;
res=sum(A,dim);


